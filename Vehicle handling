///Vehicle handling

var turn_l = keyboard_check(vk_left);
var turn_r = keyboard_check(vk_right);
var gas = keyboard_check(vk_control);
var breaking = keyboard_check(vk_alt);
var steering = 2;
var acceleration = 0.2;
var breaks = 0.1;
var max_speed = 10;


//This is for killing the sideway drift
nx = lengthdir_x(phy_speed_x/4, -phy_rotation + 90);
ny = lengthdir_y(phy_speed_y/4, -phy_rotation - 90);
dot = dot_product(nx, ny, phy_linear_velocity_x * 0.025, phy_linear_velocity_y * 0.025);
lvx = dot * nx;
lvy = dot * ny;

//Terrain friction
if (place_meeting(x, y, obj_terrain) == 0) {
    terrain_friction = 1;
	}
	else if (place_meeting(x, y, obj_zone_grass) == 1) {
    terrain_friction = 0.6;
	}
	else if (place_meeting(x, y, obj_zone_gravel) == 1) {
    terrain_friction = 0.4;
}

//Steering
if phy_speed > 0.1 {
    if turn_l { phy_rotation -= steering; }
    if turn_r { phy_rotation += steering; }
	}
	
if gas {
	global.fuel_timer_down = true;
} else {
	global.fuel_timer_down = false;
}

	
//Moving
if phy_speed < max_speed {
	if gas {
   	xpos = lengthdir_x(acceleration, -phy_rotation);
	ypos = lengthdir_y(acceleration, -phy_rotation);
	physics_apply_impulse(x, y, xpos * terrain_friction, ypos * terrain_friction);
	} else {
	physics_apply_force(x, y, -lvx * phy_mass * terrain_friction, -lvy * phy_mass * terrain_friction);
}
}

if breaking {
   	xpos_br = lengthdir_x(-breaks, -phy_rotation);
	ypos_br = lengthdir_y(-breaks, -phy_rotation);
	physics_apply_impulse(x, y, xpos_br * terrain_friction, ypos_br * terrain_friction);
	//is there a better way for breaking/reverse?
	}
